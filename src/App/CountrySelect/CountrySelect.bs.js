// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Api from "../Api/Api.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Button from "../Button/Button.bs.js";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.bs.js";
import * as DropDown from "../DropDown/DropDown.bs.js";
import * as OptionLabel from "../OptionLabel/OptionLabel.bs.js";
import * as Css from "@emotion/css";
import ReactSelect from "react-select";
import * as Search_iconSvg from "./assets/search_icon.svg";

import 'flag-icons/css/flag-icons.min.css'
;

var make = Search_iconSvg.ReactComponent;

var SearchIcon = {
  make: make
};

var ReactSelect$1 = {};

var control = Css.css({
      minWidth: "230",
      margin: "8"
    });

var menu = {
  boxShadow: "inset 0 1px 0 rgba(0, 0, 0, 0.1)"
};

var searchIconWrapper = Css.css({
      order: "-1"
    });

var searchIcon = Css.css({
      color: "grey",
      height: 13,
      width: 13
    });

var dropdownIndicator = Css.css({
      order: "-1"
    });

var Styles = {
  control: control,
  menu: menu,
  searchIconWrapper: searchIconWrapper,
  searchIcon: searchIcon,
  dropdownIndicator: dropdownIndicator
};

var selectStyles = {
  container: (function (param) {
      return Css.css({
                  width: "230px"
                });
    }),
  placeholder: (function (param) {
      return {
              color: "red"
            };
    })
};

function CountrySelect$DropdownIndicator(Props) {
  return React.createElement("div", {
              className: searchIconWrapper
            }, React.createElement(make, {
                  className: searchIcon
                }));
}

var DropdownIndicator = {
  make: CountrySelect$DropdownIndicator
};

function CountrySelect(Props) {
  var country = Props.country;
  var className = Props.className;
  var onChange = Props.onChange;
  var match = React.useState(function () {
        return [];
      });
  var setOptions = match[1];
  var options = match[0];
  var match$1 = React.useState(function () {
        return {
                value: "sg",
                label: "Singapore"
              };
      });
  var setCurrentCountry = match$1[1];
  var currentCountry = match$1[0];
  var match$2 = React.useState(function () {
        return false;
      });
  var setMenuIsOpen = match$2[1];
  var menuIsOpen = match$2[0];
  var match$3 = React.useState(function () {
        return "";
      });
  var setError = match$3[1];
  var openToggleHandler = function ($$event) {
    return Curry._1(setMenuIsOpen, (function (param) {
                  return !menuIsOpen;
                }));
  };
  React.useEffect((function () {
          $$Promise.$$catch(Api.Country.getCountries(undefined).then(function (result) {
                    var tmp;
                    if (result.TAG === /* Ok */0) {
                      var countries = result._0;
                      tmp = Curry._1(setOptions, (function (_prev) {
                              return countries;
                            }));
                    } else {
                      var msg = result._0;
                      tmp = Curry._1(setError, (function (_prev) {
                              return "Could not query countries: " + msg;
                            }));
                    }
                    return Promise.resolve(tmp);
                  }), (function (e) {
                  if (e.RE_EXN_ID === Api.FailedRequest) {
                    var msg = e._1;
                    Curry._1(setError, (function (_prev) {
                            return "Operation failed! " + msg;
                          }));
                  } else {
                    Curry._1(setError, (function (_prev) {
                            return "Unknown error";
                          }));
                  }
                  return Promise.resolve(undefined);
                }));
          
        }), []);
  React.useEffect((function () {
          var option = options.find(function (option) {
                return option.value === country;
              });
          if (option !== undefined) {
            Curry._1(setCurrentCountry, (function (param) {
                    return option;
                  }));
          }
          
        }), [options]);
  var onChangeHandler = function (country) {
    Curry._1(setCurrentCountry, (function (param) {
            return country;
          }));
    Curry._1(onChange, country.value);
    return Curry._1(setMenuIsOpen, (function (param) {
                  return !menuIsOpen;
                }));
  };
  var components_DropdownIndicator = function (param) {
    return React.createElement("div", {
                className: dropdownIndicator
              }, React.createElement(make, {
                    className: searchIcon
                  }));
  };
  var components_IndicatorSeparator = function (param) {
    return null;
  };
  var components = {
    DropdownIndicator: components_DropdownIndicator,
    IndicatorSeparator: components_IndicatorSeparator
  };
  var selectWrapper = React.createElement(DropDown.make, {
        children: React.createElement(ReactSelect, {
              value: currentCountry,
              defaultValue: currentCountry,
              options: options,
              getOptionLabel: (function (option) {
                  return React.createElement(OptionLabel.make, {
                              option: option
                            });
                }),
              onChange: onChangeHandler,
              autoFocus: true,
              controlShouldRenderValue: false,
              menuIsOpen: menuIsOpen,
              placeholder: "Search...",
              components: components
            }),
        isOpen: menuIsOpen,
        target: React.createElement(Button.make, {
              text: currentCountry.label,
              onClick: openToggleHandler
            }),
        onClose: openToggleHandler
      });
  return React.createElement("div", {
              className: className
            }, options.length > 0 ? selectWrapper : null);
}

var make$1 = CountrySelect;

export {
  SearchIcon ,
  ReactSelect$1 as ReactSelect,
  Styles ,
  selectStyles ,
  DropdownIndicator ,
  make$1 as make,
  
}
/*  Not a pure module */
